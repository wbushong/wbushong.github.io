source('~/.active-rstudio-document', echo=TRUE)
summary(ttm.exp1)
summary(ttm.exp2)
ttm.exp1 <- lmer(res.rt ~ train_test_match * binom_type + trial_num +
(1 + train_test_match * binom_type | subj_id) + (1 + train_test_match | item_key),
dat.exp1, REML = FALSE, contrasts = list(train_test_match = contr.sum, binom_type = contr.sum))
summary(ttm.exp1)
ttm.exp1 <- lmer(res.rt ~ train_test_match * binom_type + trial_num +
(1 + train_test_match * binom_type | subj_id) + (1 + train_test_match | item_key),
dat.exp1, REML = FALSE)
ttm.exp1 <- lmer(res.rt ~ train_test_match * binom_type + trial_num +
(1 + train_test_match * binom_type | subj_id) + (1 + train_test_match | item_key),
dat.exp1, contrasts = list(train_test_match = contr.sum, binom_type = contr.sum))
summary(ttm.exp1)
summary(ttm.exp2)
library(tidyverse)
library(lme4)
library(splitstackshape)
library(scales)
library(cowplot)
source("~/Dropbox/helper_fns/res.rt.R")
source("~/Dropbox/helper_fns/multiplot.R")
source("~/Dropbox/helper_fns/residualize_gam.R")
options(dplyr.width = Inf) # show all columns by default
load("pilot1/results/data.RData")
getwd()
setwd("Dropbox/Projects/DitransitiveDefiniteness/")
load("pilot1/results/data.RData")
n <- nrow(d)
removed.trials <- subset(d, RawRT < 100 & RawRT > 2000)
d <- subset(d, RawRT > 100 & RawRT < 2000)
percent.removed.raw <- (1-(nrow(d)/n))*100
message(sprintf("%f percent of raw reading times were removed", percent.removed.raw))
d$word_len <- nchar(as.character(d$Word))
# Final residualization: word length + trial
res.mem.filler.trial <- lmer(RawRT ~ word_len + Trial +
(1 + word_len + Trial | Subj), subset(d, Exp == "filler"))
d$res.mem.filler.trial <- d$RawRT - predict(res.mem.filler.trial, d)
## Remove again & re-residualize
n <- nrow(d)
removed.trials2 <- d %>%
group_by(Subj) %>%
filter(abs(scale(res.mem.filler.trial)) > 3)
removed.trials <- rbind(removed.trials, removed.trials2)
d <- d %>%
group_by(Subj) %>%
# remove residual RT's > 3 sd's from mean by subject
filter(abs(scale(res.mem.filler.trial)) <= 3)
message(sprintf(("%f percent of residual reading times more were removed by subject for being higher than 3 standard deviations from the mean."), (1-(nrow(d)/n))*100))
?gather
res.mem.filler.trial <- lmer(RawRT ~ word_len + Trial +
(1 + word_len + Trial | Subj), subset(d, Exp == "filler"))
setwd("~/Dropbox/Courses/CSP519_SP17/wbushong_labs/Lab2")
source("showmelm_WB.R")
library(foreign)
data <- read.spss("attachdiag.sav", to.data.frame = TRUE)
head(data)
rm(list=ls())
source("showmelm_WB.R")
library(foreign)
data <- read.spss("attachdiag.sav", to.data.frame = TRUE)
head(data)
nrow(data)
library(foreign)
d <- read.spss("attachdiag.sav", to.data.frame = TRUE)
head(d)
nrow(d)
cors <- cor(data[, c("neglect", "secure", "avoid", "ambiv", "masc", "fem")], use = "pairwise.complete")
cors
m <- lm(neglect ~ secure, data = data)
names(m)
m$coefficients
summary(m)
names(summary(m))
summary(m)$coefficients
mean(d$secure)
m2 <- lm(neglect ~ secure + avoid, d)
m$r.squared
summary(m2)
summary(m)
r.sq.dif <- summary(m)$r.squared - summary(m)$r.squared
r.sq.dif
r.sq.dif <- summary(m2)$r.squared - summary(m)$r.squared
r.sq.dif
showme.lm(m)
showme.lm(m, verbose = T)
showme.lm(m2, verbose=T)
tmp <- showmel.lm(m2)
tmp <- showme.lm(m2)
tmp
tmp$coef
names(tmp)
tmp$RegressionTables
tmp$RegressionTables$summary
tmp$RegressionTables$coef
summary(m2)$coef
m2.summary <- showme.lm(m2)
m2.summary
m2.summary <- showme.lm(m2, verbose = T)
source("showmelm_WB.R")
m2.summary <- showme.lm(m2)
showme.lm(m2)
names(showme.lm(m2))
showme.lm(m2)$ModelSummaries$r.squared
source("showmelm_WB.R")
m.full <- lm(neglect ~ secure + avoid + ambiv + masc + fem, d)
summary(m.full)
anova(m, m2)
m.base <- lm(neglect ~ 1, d) # base model only fits an intercept
step(m.base, scope = list(lower = m.base, upper = m.full), direction = "forward")
nrow(complete.cases(d))
complete.cases(d)
sum(complete.cases(d))
d <- d[complete.cases(d), ]
nrow(d)
m.base <- lm(neglect ~ 1, d) # base model only fits an intercept
m.full <- lm(neglect ~ secure + avoid + ambiv + masc + fem, d) # full model uses all variables of interest
step(m.base, scope = list(lower = m.base, upper = m.full), direction = "forward")
anova(m,m2)
summary(m)$AIC
names(summary(m))
summary(m)
AIC(m)
AIC(m2)
step(m.base, scope = list(lower = m.base, upper = m.full), direction = "backward")
step(m.full, scope = list(lower = m.base, upper = m.full), direction = "backward")
tmp <- step(m.full, scope = list(lower = m.base, upper = m.full), direction = "backward")
tmp
names(tmp)
m.final <- step(m.full, scope = list(lower = m.base, upper = m.full), direction = "backward")
summary(m.final)
head(d)
stddevs <- apply(d[, c("ambiv", "fem")], 2, sd)
stddev
stddevs
vifs <- vif(m.final)
vifs
norm.betas <- lm.beta(m.final)$standardized
library(lm.beta)
install.packages("lm.beta")
install.packages("lm.beta")
norm.betas <- lm.beta(m.final)$standardized
norm.betas
library(pwr)
ls()
summary(m.final)
names(summary(m.final))
summary(m.final)$df
r2.fem <- showme.lm(m.final)$RegressionTables$coefficients["fem", "sr2"]
r2.fem
r2.overall <- summary(m.final)$r.squared
r2.fem <- showme.lm(m.final)$RegressionTables$coefficients["fem", "sr2"]
f2.fem <- (r2.all - r2.fem)/(1 - r2.all)
f2.fem <- (r2.overall - r2.fem)/(1 - r2.overall)
f2.fem
power <- pwr.f2.test(u = dfs[1], v = dfs[2], f2 = f2.fem, sig.level = 0.05)
dfs <- summary(m.final)$df
power <- pwr.f2.test(u = dfs[1], v = dfs[2], f2 = f2.fem, sig.level = 0.05)
power
power <- pwr.f2.test(u = dfs[1]-2, v = dfs[2], f2 = f2.fem, sig.level = 0.05)
power
summary(m.final)
names(summary(m.final))
summary(m.final)$fstatistic
summary(m.final)$fstatistic$numdf
df1 <- summary(m.final)$fstatistic["numdf"]
df1 <- summary(m.final)$fstatistic["dendf"]
power <- pwr.f2.test(u = df1, v = df2, f2 = f2.fem, sig.level = 0.05)
df1 <- summary(m.final)$fstatistic["numdf"]
df2 <- summary(m.final)$fstatistic["dendf"]
power <- pwr.f2.test(u = df1, v = df2, f2 = f2.fem, sig.level = 0.05)
power
names(power)
power$power
summary(m.final)
showme.lm$fem
showme.lm(m.final,verbose=TRUE)
summary(m.final)$coef["fem","Estimate"]
tmp<-lm.beta(m.final)
tmp
names(tmp)
tmp$coef["fem"]
tmp$coef["fem"]**2
tmp$standardized.coefficients["fem"]**2
head(d)
m.full <- lm(neglect ~ secure + avoid + ambiv + masc + fem, d)
m.attach <- lm(neglect ~ secure + avoid + ambiv, d)
m.mascfem <- lm(neglect ~ masc + fem, d)
anova(m.full, m.attach)
anova(m.full, m.mascfem)
summary(m.full)$r.squared - summary(m.attach)$r.squared
anova(m.full, m.attach)
summary(m.full)$r.squared - summary(m.mascfem)$r.squared
anova(m.full, m.mascfem)
rm(list=ls())
clear
